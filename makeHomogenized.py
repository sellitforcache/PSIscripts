#! /home/l_bergmann/anaconda_old/bin/python
# t10, using vertical cross section, counting pixel from print

from pyne.material import Material

m1 = Material({
150310:-1.7500000000E-05, 
160320:-1.5678300000E-05, 
160330:-1.2375000000E-07, 
160340:-6.9465000000E-07, 
160360:-3.3000000000E-09,
501120:-1.2610000000E-06, 
501140:-8.4500000000E-07,
501150:-4.4200000000E-06, 
501160:-1.8889000000E-05,
501170:-9.9840000000E-06, 
501180:-3.1499000000E-05,
501190:-1.1167000000E-05, 
501200:-4.2367000000E-05,
501220:-6.0190000000E-06, 
501240:-7.4100000000E-06,
300000:-5.7500000000E-06, 
280580:-4.0846200000E-06, 
280600:-1.5733800000E-06,
280610:-6.8400000000E-08, 
280620:-2.1804000000E-07,
280640:-5.5560000000E-08, 
260540:-5.3360000000E-07, 
260560:-8.4382400000E-06,
260570:-2.0240000000E-07, 
260580:-2.5760000000E-08,
240500:-7.8210000000E-08, 
240520:-1.5082020000E-06,
240530:-1.7101800000E-07, 
240540:-4.2570000000E-08,
120240:-3.4755600000E-07, 
120250:-4.4000000000E-08,
120260:-4.8444000000E-08, 
290630:-3.2297720000E-04, 
290650:-1.4397610000E-04,
471070:-2.3534906000E-05, 
471090:-2.1865094000E-05,
220460:-3.2000000000E-08, 
220470:-2.9200000000E-08,
220480:-2.9520000000E-07, 
220490:-2.2000000000E-08,
220500:-2.1600000000E-08, 
200400:-2.4865366500E-04, 
200420:-1.6595550000E-08,
200430:-3.4627500000E-09, 
200440:-5.3505900000E-08,
200460:-1.0260000000E-10, 
200480:-4.7965500000E-09,
130270:-1.5000000000E-06, 
561300:-2.9680000000E-10, 
561320:-2.8280000000E-10,
561340:-6.7676000000E-09, 
561350:-1.8457600000E-08,
561360:-2.1991200000E-08, 
561370:-3.1444000000E-08,
561380:-2.0076000000E-07, 
110230:-2.8000000000E-05, 
511210:-5.9625720000E-04, 
511230:-4.4324280000E-04,
832090:-2.2050000000E-04, 
822040:-1.3971769910E-02, 
822060:-2.4051403917E-01,
822070:-2.2055436787E-01, 
822080:-5.2294338806E-01})

m2 = Material({
10020:2,
80160:0.996, 
80170:0.004})

m3 = Material({
561300:-4.85865610E-10,  
561320:-4.62947420E-10,  
561340:-1.10786526E-08,  
561350:-3.02153405E-08,  
561360:-3.59998915E-08,  
561370:-5.14742528E-08,  
561380:-3.28646832E-07,  
200400:-1.94209481E-03,  
200420:-1.29618566E-07,  
200430:-2.70456051E-08,  
200440:-4.17904683E-07,  
200460:-8.01351261E-10,  
200480:-3.74631715E-08,  
481060:-3.33182396E-09,  
481080:-2.37225866E-09,  
481100:-3.32915851E-08,  
481110:-3.41178774E-08,  
481120:-6.43175298E-08,  
481130:-3.25719111E-08,  
481160:-1.99642892E-08,  
270590:-1.15503231E-06,  
240500:-1.11654541E-05,  
240520:-2.15314668E-04,  
240530:-2.44149550E-05,  
240540:-6.07739906E-06,  
290630:-2.54047912E-04,  
290650:-1.13248946E-04,  
260540:-1.42486562E-04,  
260560:-2.25325302E-03,  
260570:-5.40466271E-05,  
260580:-6.87866164E-06,  
190390:-3.41769335E-04,  
190400:-4.28777900E-08,  
190410:-2.33453075E-05,  
30060 :-4.28377367E-09,  
30070 :-5.28332086E-08,  
120240:-2.30361036E-02,  
120250:-2.91633163E-03,  
120260:-3.21088113E-03,  
250550:-3.04756385E-03,  
420920:-1.55749443E-06,  
420940:-9.70810208E-07,  
420950:-1.67084308E-06,  
420960:-1.75060695E-06,  
420970:-1.00229594E-06,  
420980:-2.53250274E-06,  
421000:-1.01069214E-06,  
110230:-1.46048124E-04,  
280580:-2.59078247E-05,  
280600:-9.97959497E-06,  
280610:-4.33845794E-07,  
280620:-1.38297861E-06,  
280640:-3.52404566E-07,  
822040:-9.55145082E-07,  
822060:-1.64421403E-05,  
822070:-1.50776474E-05,  
822080:-3.57497159E-05,  
140280:-8.69335078E-04,  
140290:-4.40181591E-05,  
140300:-2.92197630E-05,  
380840:-3.84625758E-10,  
380860:-6.77216068E-09,  
380870:-4.80782198E-09,  
380880:-5.67185627E-08,  
220460:-1.45278631E-05,  
220470:-1.32566751E-05,  
220480:-1.34019537E-04, 
220490:-9.98790588E-06,  
220500:-9.80630759E-06,  
230000:-4.33914541E-05,  
300000:-4.05022074E-04,  
150310:-5.66410074E-05,  
50100 :-1.49182418E-06,   
50110 :-6.00477974E-06,  
130270:-9.62420085E-01})

m5 = Material({ 
240500:-4.6926000000E-05,
240520:-9.0492120000E-04,  
240530:-1.0261080000E-04,
240540:-2.5542000000E-05,  
260540:-1.0208000000E-04,
260560:-1.6142720000E-03,  
260570:-3.8720000000E-05,
260580:-4.9280000000E-06,  
501120:-1.2103660000E-04,
501140:-8.1107000000E-05,  
501150:-4.2425200000E-04,
501160:-1.8130534000E-03,  
501170:-9.5831040000E-04,
501180:-3.0234194000E-03,  
501190:-1.0718602000E-03,
501200:-4.0665802000E-03,  
501220:-5.7773140000E-04,
501240:-7.1124600000E-04,  
280580:-4.6700822000E-04,
280600:-1.7988978000E-04,  
280610:-7.8204000000E-06,
280620:-2.4929240000E-05,  
280640:-6.3523600000E-06,
80160 :-1.2235104000E-03,
130270:-2.3800000000E-05,
50100 :-7.9600000000E-08,
50110 :-3.2040000000E-07,  
60000 :-1.2120000000E-04,
200400:-9.6941000000E-04,
200420:-6.4700000000E-08,  
200430:-1.3500000000E-08,
200440:-2.0860000000E-07,  
200460:-4.0000000000E-10,
200480:-1.8700000000E-08,  
481060:-5.0000000000E-09,
481080:-3.5600000000E-09,  
481100:-4.9960000000E-08,
481110:-5.1200000000E-08,  
481120:-9.6520000000E-08,
481130:-4.8880000000E-08,  
481160:-2.9960000000E-08,
170350:-7.5770000000E-06,
170370:-2.4230000000E-06,  
270590:-1.0000000000E-05,
290630:-6.9160000000E-06,
290650:-3.0830000000E-06,  
10010 :-2.9995500000E-06,
1000  :-4.5000000000E-11,  
721740:-2.4138000000E-08,
721760:-7.7569400000E-07,  
721770:-2.7714000000E-06,
721780:-4.0677000000E-06,  
721790:-2.0308700000E-06,
721800:-5.2299000000E-06,  
120240:-7.8990000000E-06,
120250:-1.0000000000E-06,  
120260:-1.1010000000E-06,
250550:-1.0000000000E-05,
420920:-1.4840000000E-06,
420940:-9.2500000000E-07,  
420950:-1.5920000000E-06,
420960:-1.6680000000E-06,  
420970:-9.5500000000E-07,
420980:-2.4130000000E-06,  
421000:-9.6300000000E-07,
70140 :-2.8296056000E-05,
70150 :-1.0394400000E-07,  
110230:-1.5000000000E-05,
410930:-5.0000000000E-05,
150310:-1.5000000000E-05,
822040:-2.8000000000E-07,
822060:-4.8200000000E-06,  
822070:-4.4200000000E-06,
822080:-1.0480000000E-05,  
140280:-7.1201560000E-05,
140290:-3.6052400000E-06,  
140300:-2.3932000000E-06,
731810:-1.0000000000E-04,
922340:-2.7500000000E-11,
922350:-3.6000000000E-09,  
922380:-4.9637250000E-07,
230000:-2.0000000000E-05,
741820:-8.0100000000E-06,
741830:-4.3020000000E-06,  
741840:-9.2160000000E-06,
741860:-8.5920000000E-06,  
400910:-1.1019972084E-01,
400920:-1.6844253230E-01,  
400940:-1.7070152836E-01,
400960:-2.7500821600E-02})

m1.normalize()
m2.normalize()
m3.normalize()
m5.normalize()

m1.density = -10.44
m2.density = -1.106
m3.density = -2.66
m5.density = -6.56

# from pixels, re-normalize
m1_frac = 0.488
m2_frac = 0.238
m3_frac = 0.056
m5_frac = 0.100
#tot = m1_frac + m2_frac + m3_frac + m5_frac
#m1_frac = m1_frac / tot
#m2_frac = m2_frac / tot
#m3_frac = m3_frac / tot
#m5_frac = m5_frac / tot

### density times area fraction gives "mass"
m1.mass = m1.density * m1_frac
m2.mass = m2.density * m2_frac
m3.mass = m3.density * m3_frac
m5.mass = m5.density * m5_frac

### average density
avg_density = m1.density * m1_frac + m2.density * m2_frac + m3.density * m3_frac + m5.density * m5_frac
avg_material = m1 + m2 + m3 + m5

#print m1,m2,m3,m5

print avg_density
#print avg_material

print avg_material.mcnp()